// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_application_1/test/mocks/workout_repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:workout_repository/src/models/models.dart' as _i2;
import 'package:workout_repository/src/workout_repo.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMyWorkoutModel_0 extends _i1.SmartFake
    implements _i2.MyWorkoutModel {
  _FakeMyWorkoutModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WorkoutRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutRepository extends _i1.Mock implements _i3.WorkoutRepository {
  MockWorkoutRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> addWorkout(_i2.MyWorkoutModel? workout) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWorkout,
          [workout],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateWorkout(_i2.MyWorkoutModel? workout) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWorkout,
          [workout],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.MyWorkoutModel> getWorkout(String? workoutId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkout,
          [workoutId],
        ),
        returnValue: _i4.Future<_i2.MyWorkoutModel>.value(_FakeMyWorkoutModel_0(
          this,
          Invocation.method(
            #getWorkout,
            [workoutId],
          ),
        )),
      ) as _i4.Future<_i2.MyWorkoutModel>);

  @override
  _i4.Stream<List<_i2.MyWorkoutModel>> getWorkoutsByUserId(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutsByUserId,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i2.MyWorkoutModel>>.empty(),
      ) as _i4.Stream<List<_i2.MyWorkoutModel>>);

  @override
  _i4.Future<void> deleteWorkout(String? workoutId) => (super.noSuchMethod(
        Invocation.method(
          #deleteWorkout,
          [workoutId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
